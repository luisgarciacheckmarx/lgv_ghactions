<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<!-- lookup artificatId-ms pom -->
	<groupId>devsecops.com.lgims.cio</groupId>
	<artifactId>nl-plume-device-sys</artifactId>
	<version>1.0.0-SNAPSHOT</version>
	<packaging>jar</packaging>
	<name>nl-plume-device-sys</name>
	<description>nl-plume-device-sys project for Spring Boot</description>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.2.5.RELEASE</version>
		<relativePath />
		<!-- lookup parent from repository -->
	</parent>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
		<swagger-jersey2-jaxrs-version>1.6.0</swagger-jersey2-jaxrs-version>
		<commons-lang3-version>3.9</commons-lang3-version>
		<spring-cloud.version>Hoxton.RELEASE</spring-cloud.version>
		<hazelcast.version>3.12.6</hazelcast.version>
		<powermockito.version>2.0.5</powermockito.version>
		<commons-collection-version>3.2.2</commons-collection-version>
		<generic.util.version>1.0.3</generic.util.version>
		<maven.surefire.plugin.version>2.12.4</maven.surefire.plugin.version>
		<maven.sonar.plugin.version>3.2</maven.sonar.plugin.version>
		<maven.enforcer.plugin.version>1.4</maven.enforcer.plugin.version>
		<maven.dependency.plugin.version>2.10</maven.dependency.plugin.version>
		<maven.jgitflow.plugin.version>1.0-m4.3</maven.jgitflow.plugin.version>
		<junit.params.version>1.0.4</junit.params.version>
		<opentracing.version>0.35.1</opentracing.version>
		<zipkinreporter.http.version>2.7.7</zipkinreporter.http.version>
		<zipkinreporter.kafka.version>2.7.4</zipkinreporter.kafka.version>
		<opentracing.contrib>0.3.2</opentracing.contrib>
		<opentracing.cloud.starter.version>0.4.0</opentracing.cloud.starter.version>
		<zipkin.brave.context.version>5.6.1</zipkin.brave.context.version>
		<!-- Sonar-JaCoCo properties -->
		<runSuite>com/lgims/**/*.class</runSuite>
		<sonar.java.coveragePlugin>jacoco</sonar.java.coveragePlugin>
		<sonar.dynamicAnalysis>reuseReports</sonar.dynamicAnalysis>
		<sonar.jacoco.reportPath>${project.basedir}/target/jacoco.exec</sonar.jacoco.reportPath>
		<sonar.language>java</sonar.language>
		<jacoco.maven.plugin.version>0.8.2</jacoco.maven.plugin.version>
		<logback.access.version>1.2.3</logback.access.version>
		<logback.access.springboot.starter.version>2.7.1</logback.access.springboot.starter.version>
		<micrometer.version>1.3.5</micrometer.version>
		<resilience4j-circuitbreaker.version>1.2.0</resilience4j-circuitbreaker.version>
		<resilience4j-spring-boot.version>1.2.0</resilience4j-spring-boot.version>
		<resilience4j-micrometer.version>1.2.0</resilience4j-micrometer.version>
		<resilience4j-metrics.version>1.2.0</resilience4j-metrics.version>
		<resilience4j-prometheus.version>1.2.0</resilience4j-prometheus.version>
		<micrometer-core.version>1.3.5</micrometer-core.version>
		<httpclient.version>4.5.10</httpclient.version>
		<jackson.version>2.10.2</jackson.version>
		<akana.adaptor.version>1.0.3</akana.adaptor.version>

	</properties>

	<scm>

	</scm>

	<dependencies>
		
		<dependency>
			<groupId>io.micrometer</groupId>
			<artifactId>micrometer-registry-prometheus</artifactId>
		</dependency>
		<dependency>
			<groupId>org.powermock</groupId>
			<artifactId>powermock-api-mockito2</artifactId>
			<exclusions>
				<exclusion>
					<groupId>org.mockito</groupId>
					<artifactId>mockito-core</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.powermock</groupId>
			<artifactId>powermock-module-junit4</artifactId>
		</dependency>

		<dependency>
			<groupId>net.rakugakibox.spring.boot</groupId>
			<artifactId>logback-access-spring-boot-starter</artifactId>
			<exclusions>
				<exclusion>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-tomcat</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-access</artifactId>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-webflux</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-undertow</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.ow2.asm</groupId>
					<artifactId>asm</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>io.projectreactor</groupId>
			<artifactId>reactor-test</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- <dependency> <groupId>org.springframework.cloud</groupId> <artifactId>spring-cloud-starter-zipkin</artifactId> 
			</dependency> -->
		<dependency>
			<groupId>io.swagger</groupId>
			<artifactId>swagger-annotations</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
		</dependency>
		<dependency>
			<groupId>pl.pragmatists</groupId>
			<artifactId>JUnitParams</artifactId>
		</dependency>
		<dependency>
			<groupId>commons-collections</groupId>
			<artifactId>commons-collections</artifactId>
		</dependency>
		<dependency>
			<groupId>io.opentracing.brave</groupId>
			<artifactId>brave-opentracing</artifactId>
			<exclusions>
				<exclusion>
					<groupId>io.zipkin.brave</groupId>
					<artifactId>brave</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>io.zipkin.reporter2</groupId>
			<artifactId>zipkin-sender-okhttp3</artifactId>
			<exclusions>
				<exclusion>
					<groupId>io.zipkin.zipkin2</groupId>
					<artifactId>zipkin</artifactId>
				</exclusion>
				<exclusion>
					<groupId>io.zipkin.reporter2</groupId>
					<artifactId>zipkin-reporter</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-vault-config</artifactId>
			<exclusions>
				<exclusion>
					<groupId>org.apache.httpcomponents</groupId>
					<artifactId>httpclient</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpclient</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-config-server</artifactId>
			<exclusions>
				<exclusion>
					<groupId>org.apache.httpcomponents</groupId>
					<artifactId>httpclient</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>io.opentracing.contrib</groupId>
			<artifactId>opentracing-spring-cloud-starter</artifactId>
			<exclusions>
				<exclusion>
					<groupId>org.hdrhistogram</groupId>
					<artifactId>HdrHistogram</artifactId>
				</exclusion>
				<exclusion>
					<groupId>io.opentracing.contrib</groupId>
					<artifactId>opentracing-spring-messaging-starter</artifactId>
				</exclusion>
				<exclusion>
					<groupId>io.opentracing.contrib</groupId>
					<artifactId>opentracing-spring-rabbitmq-starter</artifactId>
				</exclusion>
				<exclusion>
					<groupId>io.opentracing.contrib</groupId>
					<artifactId>opentracing-spring-cloud-jdbc-starter</artifactId>
				</exclusion>
				<exclusion>
					<groupId>io.opentracing.contrib</groupId>
					<artifactId>opentracing-spring-cloud-jms-starter</artifactId>
				</exclusion>
				<exclusion>
					<groupId>io.opentracing.contrib</groupId>
					<artifactId>opentracing-spring-cloud-redis-starter</artifactId>
				</exclusion>
				<exclusion>
					<groupId>io.opentracing.contrib</groupId>
					<artifactId>opentracing-spring-cloud-mongo-starter</artifactId>
				</exclusion>
				<exclusion>
					<groupId>io.opentracing.contrib</groupId>
					<artifactId>opentracing-spring-cloud-websocket-starter</artifactId>
				</exclusion>
				<exclusion>
					<groupId>io.opentracing.contrib</groupId>
					<artifactId>opentracing-spring-cloud-zuul-starter</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>io.zipkin.brave</groupId>
			<artifactId>brave-context-slf4j</artifactId>
		</dependency>

		<!-- Resilience Dependency -->
		<dependency>
			<groupId>io.github.resilience4j</groupId>
			<artifactId>resilience4j-circuitbreaker</artifactId>
		</dependency>
		<dependency>
			<groupId>io.github.resilience4j</groupId>
			<artifactId>resilience4j-spring-boot2</artifactId>
		</dependency>
		<dependency>
			<groupId>io.github.resilience4j</groupId>
			<artifactId>resilience4j-micrometer</artifactId>
		</dependency>
		<dependency>
			<groupId>io.github.resilience4j</groupId>
			<artifactId>resilience4j-metrics</artifactId>
		</dependency>
		<dependency>
			<groupId>io.github.resilience4j</groupId>
			<artifactId>resilience4j-prometheus</artifactId>
			<exclusions>
				<exclusion>
					<groupId>io.prometheus</groupId>
					<artifactId>simpleclient_common</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>io.micrometer</groupId>
			<artifactId>micrometer-core</artifactId>
		</dependency>
	</dependencies>
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>io.swagger</groupId>
				<artifactId>swagger-annotations</artifactId>
				<version>${swagger-jersey2-jaxrs-version}</version>
			</dependency>
			<dependency>
				<groupId>commons-collections</groupId>
				<artifactId>commons-collections</artifactId>
				<version>${commons-collection-version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-lang3</artifactId>
				<version>${commons-lang3-version}</version>
			</dependency>
			<dependency>
				<groupId>com.hazelcast</groupId>
				<artifactId>hazelcast</artifactId>
				<version>${hazelcast.version}</version>
			</dependency>
			<dependency>
				<groupId>com.hazelcast</groupId>
				<artifactId>hazelcast-client</artifactId>
				<version>${hazelcast.version}</version>
			</dependency>
			<dependency>
				<groupId>com.hazelcast</groupId>
				<artifactId>hazelcast-spring</artifactId>
				<version>${hazelcast.version}</version>
			</dependency>
			<dependency>
				<groupId>org.powermock</groupId>
				<artifactId>powermock-api-mockito2</artifactId>
				<version>${powermockito.version}</version>
			</dependency>
			<dependency>
				<groupId>org.powermock</groupId>
				<artifactId>powermock-module-junit4</artifactId>
				<version>${powermockito.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>pl.pragmatists</groupId>
				<artifactId>JUnitParams</artifactId>
				<version>${junit.params.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>io.opentracing.brave</groupId>
				<artifactId>brave-opentracing</artifactId>
				<version>${opentracing.version}</version>
			</dependency>
			<dependency>
				<groupId>io.zipkin.reporter2</groupId>
				<artifactId>zipkin-sender-okhttp3</artifactId>
				<version>${zipkinreporter.http.version}</version>
			</dependency>
			<dependency>
				<groupId>io.zipkin.reporter2</groupId>
				<artifactId>zipkin-sender-kafka11</artifactId>
				<version>${zipkinreporter.kafka.version}</version>
			</dependency>
			<dependency>
				<groupId>io.opentracing.contrib</groupId>
				<artifactId>opentracing-spring-web-autoconfigure</artifactId>
				<version>${opentracing.contrib}</version>
			</dependency>
			<dependency>
				<groupId>io.opentracing.contrib</groupId>
				<artifactId>opentracing-spring-cloud-starter</artifactId>
				<version>${opentracing.cloud.starter.version}</version>
			</dependency>
			<dependency>
				<groupId>io.zipkin.brave</groupId>
				<artifactId>brave-context-slf4j</artifactId>
				<version>${zipkin.brave.context.version}</version>
			</dependency>
			<!--Prometheus -->
			<dependency>
				<groupId>io.micrometer</groupId>
				<artifactId>micrometer-spring-legacy</artifactId>
				<version>${micrometer.version}</version>
			</dependency>
			<dependency>
				<groupId>io.micrometer</groupId>
				<artifactId>micrometer-registry-prometheus</artifactId>
				<version>${micrometer.version}</version>
			</dependency>
			<!--Log back access -->
			<dependency>
				<groupId>net.rakugakibox.spring.boot</groupId>
				<artifactId>logback-access-spring-boot-starter</artifactId>
				<version>${logback.access.springboot.starter.version}</version>
			</dependency>
			<dependency>
				<groupId>ch.qos.logback</groupId>
				<artifactId>logback-access</artifactId>
				<version>${logback.access.version}</version>
			</dependency>
			<dependency>
				<groupId>ch.qos.logback</groupId>
				<artifactId>logback-classic</artifactId>
				<version>${logback.access.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.httpcomponents</groupId>
				<artifactId>httpclient</artifactId>
				<version>${httpclient.version}</version>
			</dependency>
			<!--end -->

			<!-- Resilience dependency -->
			<dependency>
				<groupId>io.github.resilience4j</groupId>
				<artifactId>resilience4j-circuitbreaker</artifactId>
				<version>${resilience4j-circuitbreaker.version}</version>
			</dependency>
			<dependency>
				<groupId>io.github.resilience4j</groupId>
				<artifactId>resilience4j-spring-boot2</artifactId>
				<version>${resilience4j-spring-boot.version}</version>
			</dependency>
			<dependency>
				<groupId>io.github.resilience4j</groupId>
				<artifactId>resilience4j-micrometer</artifactId>
				<version>${resilience4j-micrometer.version}</version>
			</dependency>
			<dependency>
				<groupId>io.github.resilience4j</groupId>
				<artifactId>resilience4j-metrics</artifactId>
				<version>${resilience4j-metrics.version}</version>
			</dependency>
			<dependency>
				<groupId>io.github.resilience4j</groupId>
				<artifactId>resilience4j-prometheus</artifactId>
				<version>${resilience4j-prometheus.version}</version>
			</dependency>
			<dependency>
				<groupId>io.micrometer</groupId>
				<artifactId>micrometer-core</artifactId>
				<version>${micrometer-core.version}</version>
			</dependency>

			<!-- end -->
		</dependencies>
	</dependencyManagement>
	<build>
		<sourceDirectory>.</sourceDirectory>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<includes>
						<include>src/main/java/**/*.java</include>
						<include>src/gen/java/**/*.java</include>
					</includes>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.sonarsource.scanner.maven</groupId>
				<artifactId>sonar-maven-plugin</artifactId>
				<version>${maven.sonar.plugin.version}</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-enforcer-plugin</artifactId>
				<version>${maven.enforcer.plugin.version}</version>
				<executions>
					<execution>
						<id>enforce</id>
						<goals>
							<goal>enforce</goal>
						</goals>
						<configuration>
							<rules>
								<dependencyConvergence />
							</rules>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>${maven.dependency.plugin.version}</version>
				<executions>
					<execution>
						<id>analyze</id>
						<goals>
							<goal>analyze-only</goal>
						</goals>
						<configuration>
							<failOnWarning>true</failOnWarning>
							<ignoredDependencies>
								<ignoredDependency>org.springframework*:::</ignoredDependency>
								<ignoredDependency>io.undertow:::</ignoredDependency>
								<ignoredDependency>io.netty:::</ignoredDependency>
								<ignoredDependency>io.projectreactor*:::</ignoredDependency>
								<ignoredDependency>org.powermock:::</ignoredDependency>
								<ignoredDependency>org.mockito:::</ignoredDependency>
								<ignoredDependency>io.github.resilience4j:::</ignoredDependency>
								<ignoredDependency>junit:::</ignoredDependency>
							</ignoredDependencies>
							<ignoredUsedUndeclaredDependencies>
								<ignoredUsedUndeclaredDependency>io.undertow:undertow-servlet:jar::
								</ignoredUsedUndeclaredDependency>
								<ignoredUsedUndeclaredDependency>io.undertow:undertow-core:jar::
								</ignoredUsedUndeclaredDependency>
								<ignoredUsedUndeclaredDependency>org.slf4j:slf4j-api::
								</ignoredUsedUndeclaredDependency>
								<ignoredUsedUndeclaredDependency>com.fasterxml.jackson.core:jackson-databind::
								</ignoredUsedUndeclaredDependency>
								<ignoredUsedUndeclaredDependency>com.fasterxml.jackson.core:jackson-annotations::
								</ignoredUsedUndeclaredDependency>
								<ignoredUsedUndeclaredDependency>jakarta.servlet:jakarta.servlet-api::
								</ignoredUsedUndeclaredDependency>
								<!-- <ignoredUsedUndeclaredDependency>javax.servlet:javax.servlet-api::3.1.0 
									</ignoredUsedUndeclaredDependency> -->
								<ignoredUsedUndeclaredDependency>javax.annotation:javax.annotation-api::
								</ignoredUsedUndeclaredDependency>
								<ignoredUsedUndeclaredDependency>javax.validation:validation-api::
								</ignoredUsedUndeclaredDependency>
								<ignoredUsedUndeclaredDependency>com.fasterxml.jackson.core:jackson-core::
								</ignoredUsedUndeclaredDependency>
								<ignoredUsedUndeclaredDependency>io.zipkin.reporter2:zipkin-reporter:jar:
								</ignoredUsedUndeclaredDependency>
								<ignoredUsedUndeclaredDependency>io.opentracing:opentracing-api:jar:
								</ignoredUsedUndeclaredDependency>
								<ignoredUsedUndeclaredDependency>io.zipkin.zipkin2:zipkin:jar:
								</ignoredUsedUndeclaredDependency>
								<ignoredUsedUndeclaredDependency>io.zipkin.brave:brave:jar:
								</ignoredUsedUndeclaredDependency>
								<ignoredUsedUndeclaredDependency>org.apache.kafka:kafka-clients:jar:
								</ignoredUsedUndeclaredDependency>
								<ignoredUsedUndeclaredDependency>commons-lang:commons-lang:jar:
								</ignoredUsedUndeclaredDependency>
								<ignoredUsedUndeclaredDependency>jakarta.validation:jakarta.validation-api:jar::
								</ignoredUsedUndeclaredDependency>
							</ignoredUsedUndeclaredDependencies>
							<ignoredUnusedDeclaredDependencies>
								<ignoredUnusedDeclaredDependency>io.micrometer:micrometer-registry-prometheus:jar::
								</ignoredUnusedDeclaredDependency>
								<ignoredUnusedDeclaredDependency>io.micrometer:micrometer-spring-legacy:jar::
								</ignoredUnusedDeclaredDependency>
								<ignoredUnusedDeclaredDependency>ch.qos.logback:logback-classic:jar:
								</ignoredUnusedDeclaredDependency>
								<ignoredUnusedDeclaredDependency>ch.qos.logback:logback-access:jar:
								</ignoredUnusedDeclaredDependency>
								<ignoredUnusedDeclaredDependency>net.rakugakibox.spring.boot:logback-access-spring-boot-starter:jar:
								</ignoredUnusedDeclaredDependency>
								<ignoredUnusedDeclaredDependency>io.opentracing.contrib:opentracing-spring-cloud-starter:jar:
								</ignoredUnusedDeclaredDependency>
								<ignoredUnusedDeclaredDependency>pl.pragmatists:JUnitParams:jar:
								</ignoredUnusedDeclaredDependency>
								<ignoredUnusedDeclaredDependency>io.opentracing.brave:brave-opentracing:jar:
								</ignoredUnusedDeclaredDependency>
								<ignoredUnusedDeclaredDependency>io.micrometer:micrometer-core:jar:
								</ignoredUnusedDeclaredDependency>
								<ignoredUnusedDeclaredDependency>io.zipkin.brave:brave-context-slf4j:jar:
								</ignoredUnusedDeclaredDependency>
								<ignoredUnusedDeclaredDependency>io.zipkin.reporter2:zipkin-sender-okhttp3:jar:
								</ignoredUnusedDeclaredDependency>
								<ignoredUnusedDeclaredDependency>org.apache.httpcomponents:httpclient:jar:
								</ignoredUnusedDeclaredDependency>
							</ignoredUnusedDeclaredDependencies>
						</configuration>
					</execution>
					<execution>
						<id>dependency_tree</id>
						<goals>
							<goal>tree</goal>
						</goals>
						<phase>generate-sources</phase>
						<configuration>
							<outputFile>target/dependency_tree.txt</outputFile>
							<verbose>true</verbose>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>versions-maven-plugin</artifactId>
				<inherited>false</inherited>
				<configuration>
					<outputFile>outdated-dependencies.txt</outputFile>
					<rulesUri>file://${basedir}/maven-version-rules.xml</rulesUri>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>${jacoco.maven.plugin.version}</version>
				<configuration>
					<destFile>${sonar.jacoco.reportPath}</destFile>
					<append>true</append>
				</configuration>
				<executions>
					<execution>
						<id>agent</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>${maven.surefire.plugin.version}</version>
				<configuration>
					<includes>
						<include>${runSuite}</include>
					</includes>
				</configuration>
			</plugin>
			<plugin>
				<groupId>external.atlassian.jgitflow</groupId>
				<artifactId>jgitflow-maven-plugin</artifactId>
				<version>${maven.jgitflow.plugin.version}</version>
				<configuration>
					<flowInitContext>
						<masterBranchName>master</masterBranchName>
						<developBranchName>development</developBranchName>
						<featureBranchPrefix>feature-</featureBranchPrefix>
						<releaseBranchPrefix>${project.name}-release-</releaseBranchPrefix>
						<hotfixBranchPrefix>${project.name}-hotfix-</hotfixBranchPrefix>
						<versionTagPrefix>${project.name}-</versionTagPrefix>
					</flowInitContext>
					<noReleaseMerge>true</noReleaseMerge>
					<enableSshAgent>true</enableSshAgent>
					<keepBranch>false</keepBranch>
					<pushFeatures>true</pushFeatures>
					<pushReleases>true</pushReleases>
					<pushHotfixes>true</pushHotfixes>
					<pullMaster>true</pullMaster>
					<pullDevelop>true</pullDevelop>
					<allowSnapshots>true</allowSnapshots>
					<username>${git.user}</username>
					<password>${git.password}</password>
				</configuration>
			</plugin>
			<plugin>
              <!--For CxConsole (Checkmarx CLI) execution-->
              <!--mvn exec:exec -->
              <groupId>org.codehaus.mojo</groupId>
              <artifactId>exec-maven-plugin</artifactId>
              <version>3.0.0</version>
              <executions>
                <execution>
                  <id>sca</id>
                  <goals>
                    <goal>exec</goal>
                  </goals>
                </execution>
              </executions>
              <configuration>
                <executable>D:\\LGV\\bin\\ScaResolver-win64\\ScaResolver.exe</executable>
                <workingDirectory>.</workingDirectory>
                <arguments>
				  <argument>-c</argument>	
				  <argument>D:\\LGV\\bin\\ScaResolver-win64\\Configuration.ini</argument>
                  <argument>--project-name</argument>
                  <argument>LGV_TEST_SCAR</argument>
                  <argument>--account</argument>
                  <argument>ps-team-emea</argument>
                  <argument>--username</argument>
                  <argument>luis.garciaviejo@checkmarx.com</argument>
                  <argument>--password</argument>
                  <argument>CxPass123!</argument>
                  <argument>--scan-path</argument>
                  <argument>.</argument>
		  <argument>--maven-parameters=-s configuration\\settings.xml</argument>
		  <argument>--log-level</argument>
		  <argument>Debug</argument>
			
                </arguments>
              </configuration>
            </plugin>
		</plugins>
	</build>
	<profiles>
	
	  
	  <profile>
			<id>swagger</id>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-clean-plugin</artifactId>
						<version>3.1.0</version>
						<configuration>
							<filesets>
								<fileset>
									<directory>src/gen/java</directory>
									<includes>
										<include>**</include>
									</includes>
									<followSymlinks>false</followSymlinks>
								</fileset>
							</filesets>
						</configuration>
					</plugin>
					<plugin>
						<groupId>io.swagger</groupId>
						<artifactId>swagger-codegen-maven-plugin</artifactId>
						<version>2.4.0.1.12</version>
						<executions>
							<execution>
								<id>template-ms</id>
								<goals>
									<goal>generate</goal>
								</goals>
								<configuration>
									<inputSpec>${basedir}/src/main/resources/swagger/nl-plume-device.yaml</inputSpec>
									<configurationFile>${project.basedir}/src/main/resources/codegen-nl-plume-device-sys-ms-config.json</configurationFile>
									<language>spring</language>
									<output>${project.basedir}</output>
									<generateModels>false</generateModels>
									<configOptions>
										<sourceFolder>src/gen/java</sourceFolder>
									</configOptions>
								</configuration>
							</execution>
							<execution>
								<id>template-datamodel</id>
								<goals>
									<goal>generate</goal>
								</goals>
								<configuration>
									<inputSpec>${basedir}/src/main/resources/swagger/nl-plume-device-datamodel.yaml</inputSpec>
									<configurationFile>${project.basedir}/src/main/resources/codegen-nl-plume-device-sys-ms-datamodel-config.json</configurationFile>
									<language>spring</language>
									<output>${project.basedir}</output>
									<generateModels>true</generateModels>
									<configOptions>
										<sourceFolder>src/gen/java</sourceFolder>
									</configOptions>
								</configuration>
							</execution>
													</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
